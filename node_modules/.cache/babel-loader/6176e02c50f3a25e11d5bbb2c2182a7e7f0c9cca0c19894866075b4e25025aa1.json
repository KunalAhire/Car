{"ast":null,"code":"import { put, call, delay } from 'redux-saga/effects';\nimport { getAll, createUser, getAllCars, createCar, serviceRecords } from './ApiCall';\n\n//get all user details\nexport function* getAllUsers() {\n  try {\n    yield put({\n      type: 'show'\n    });\n    const mydata = yield call(getAll);\n    yield put({\n      type: 'data',\n      message: mydata.Users\n    });\n    yield put({\n      type: 'hide'\n    });\n  } catch (error) {\n    yield put({\n      type: 'AlertFailed',\n      message: error\n    });\n  }\n}\n\n//create new user\nexport function* createNewUser(payload) {\n  try {\n    yield put({\n      type: 'show'\n    });\n    const status = yield call(createUser, payload.message);\n    if (status.data.error === 0) {\n      delay(500);\n      yield put({\n        type: 'AlertSuccess',\n        message: \"User created Successfully!\"\n      });\n      yield put({\n        type: 'hide'\n      });\n    } else {\n      yield put({\n        type: 'AlertFailed',\n        message: \"Duplicate user not allowted!!!\"\n      });\n      yield put({\n        type: 'hide'\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'AlertSuccess',\n      message: `Error while creating new user ${error}`\n    });\n    yield put({\n      type: 'hide'\n    });\n  }\n}\n\n// get users Cars \nexport function* getcars(payload) {\n  try {\n    yield put({\n      type: 'show'\n    });\n    const data = yield call(getAllCars, payload);\n    if (data.error === 0) {\n      yield put({\n        type: 'data',\n        message: data.User.Cars\n      });\n      yield put({\n        type: 'hide'\n      });\n    } else {\n      throw Error(\"Somethinng went wrong please try again\");\n    }\n  } catch (error) {\n    yield put({\n      type: 'AlertFailed',\n      message: error\n    });\n    yield put({\n      type: 'hide'\n    });\n  }\n}\n\n// create new car for user\nexport function* createNewCar(payload) {\n  try {\n    const data = yield call(createCar, payload.message);\n    if (data.error === 0) {\n      window.location.reload();\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    yield put({\n      type: 'AlertFailed',\n      message: error\n    });\n  }\n}\n\n// get service record of cars\nexport function* getServiceRecord(payload) {\n  try {\n    const data = yield call(serviceRecords, payload.message);\n    if (data.error === 0) {\n      delay(1000);\n      console.log(data.Car);\n      debugger;\n      yield put({\n        type: 'data',\n        message: data.Car\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'AlertFailed',\n      message: error\n    });\n  }\n}","map":{"version":3,"names":["put","call","delay","getAll","createUser","getAllCars","createCar","serviceRecords","getAllUsers","type","mydata","message","Users","error","createNewUser","payload","status","data","getcars","User","Cars","Error","createNewCar","window","location","reload","getServiceRecord","console","log","Car"],"sources":["C:/Users/notme/Desktop/ReduxSaga/repo/Car/src/state/Saga/sagas.js"],"sourcesContent":["import { put, call, delay } from 'redux-saga/effects';\r\nimport { getAll, createUser, getAllCars, createCar, serviceRecords } from './ApiCall';\r\n\r\n//get all user details\r\nexport function* getAllUsers() {\r\n  try {\r\n    yield put({ type: 'show' })\r\n    const mydata = yield call(getAll);\r\n    yield put({ type: 'data', message: mydata.Users })\r\n    yield put({ type: 'hide' })\r\n  } catch (error) {\r\n    yield put({ type: 'AlertFailed', message: error })\r\n  }\r\n\r\n}\r\n\r\n//create new user\r\nexport function* createNewUser(payload) {\r\n\r\n  try {\r\n    yield put({ type: 'show' })\r\n    const status = yield call(createUser, payload.message);\r\n    if (status.data.error === 0) {\r\n      delay(500);\r\n      yield put({ type: 'AlertSuccess', message: \"User created Successfully!\" })\r\n      yield put({ type: 'hide' })\r\n    } else {\r\n      yield put({ type: 'AlertFailed', message: \"Duplicate user not allowted!!!\" })\r\n      yield put({ type: 'hide' })\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: 'AlertSuccess', message: `Error while creating new user ${error}` })\r\n    yield put({ type: 'hide' })\r\n  }\r\n}\r\n\r\n// get users Cars \r\nexport function* getcars(payload) {\r\n  try {\r\n    yield put({ type: 'show' })\r\n    const data = yield call(getAllCars, payload);\r\n    if (data.error === 0) {\r\n      yield put({ type: 'data', message: data.User.Cars })\r\n      yield put({ type: 'hide' })\r\n    } else {\r\n      throw Error(\"Somethinng went wrong please try again\")\r\n    }\r\n\r\n  } catch (error) {\r\n    yield put({ type: 'AlertFailed', message: error })\r\n    yield put({ type: 'hide' })\r\n  }\r\n}\r\n\r\n// create new car for user\r\nexport function* createNewCar(payload){\r\n  \r\n  try {\r\n    const data = yield call(createCar, payload.message);\r\n    if(data.error === 0){\r\n      window.location.reload();\r\n    }else{\r\n      throw new Error();\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: 'AlertFailed', message: error })\r\n  }\r\n}\r\n\r\n// get service record of cars\r\nexport function* getServiceRecord(payload){\r\n  try {\r\n    const data = yield call(serviceRecords, payload.message);\r\n    if(data.error === 0){\r\n      delay(1000)\r\n      console.log(data.Car);\r\n      debugger;\r\n      yield put({ type: 'data', message: data.Car })\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: 'AlertFailed', message: error })\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}