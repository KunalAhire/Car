{"ast":null,"code":"import { put, takeEvery, call, all, takeLatest, delay } from 'redux-saga/effects';\nimport { data } from '../action-creators';\nimport { getAll, createUser } from './ApiCall';\n\n//get all user details\nexport function* getAllUsers() {\n  try {\n    yield put({\n      type: 'show'\n    });\n    const mydata = yield call(getAll);\n    yield put(data(mydata));\n    yield put({\n      type: 'hide'\n    });\n  } catch (error) {\n    yield put({\n      type: 'AlertFailed',\n      message: error\n    });\n  }\n}\n\n//create new user\nexport function* createNewUser(payload) {\n  yield put({\n    type: 'show'\n  });\n  try {\n    const status = yield call(createUser, payload.message);\n    if (status.data.error === 0) {\n      delay(500);\n      yield put({\n        type: 'AlertSuccess',\n        message: \"User created Successfully!\"\n      });\n    } else {\n      yield put({\n        type: 'AlertFailed',\n        message: \"Duplicate user not allowted!!!\"\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'AlertSuccess',\n      message: `Error while creating new user ${error}`\n    });\n  }\n  yield put({\n    type: 'hide'\n  });\n}\nexport function* watchApi() {\n  yield takeEvery('getAllUsers', getAllUsers);\n  yield takeLatest('createNewUser', createNewUser);\n}\nexport default function* rootSaga() {\n  yield all([watchApi()]);\n}","map":{"version":3,"names":["put","takeEvery","call","all","takeLatest","delay","data","getAll","createUser","getAllUsers","type","mydata","error","message","createNewUser","payload","status","watchApi","rootSaga"],"sources":["C:/Users/notme/Desktop/ReduxSaga/repo/Car/src/state/Saga/sagas.js"],"sourcesContent":["import { put, takeEvery, call, all, takeLatest, delay } from 'redux-saga/effects';\r\nimport { data } from '../action-creators'\r\nimport { getAll, createUser } from './ApiCall';\r\n\r\n//get all user details\r\nexport function* getAllUsers() {\r\n  try {\r\n    yield put({ type: 'show' })\r\n  const mydata = yield call(getAll);\r\n  yield put(data(mydata));\r\n  yield put({ type: 'hide' })\r\n  } catch (error) {\r\n    yield put({type: 'AlertFailed', message:error})\r\n  }\r\n  \r\n}\r\n\r\n//create new user\r\nexport function* createNewUser(payload) {\r\n  yield put({ type: 'show' })\r\n  try { \r\n    const status = yield call(createUser,payload.message);\r\n    if (status.data.error === 0) {\r\n      delay(500);\r\n      yield put({type: 'AlertSuccess', message:\"User created Successfully!\"})\r\n\r\n    } else{\r\n      yield put({type: 'AlertFailed', message:\"Duplicate user not allowted!!!\"})\r\n      \r\n    }\r\n  } catch (error) {\r\n    yield put({type: 'AlertSuccess', message:`Error while creating new user ${error}`})\r\n  }\r\n  yield put({ type: 'hide' })\r\n  \r\n}\r\n\r\n\r\nexport function* watchApi() {\r\n  yield takeEvery('getAllUsers', getAllUsers)\r\n  yield takeLatest('createNewUser', createNewUser)\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchApi()\r\n  ])\r\n}"],"mappings":"AAAA,SAASA,GAAG,EAAEC,SAAS,EAAEC,IAAI,EAAEC,GAAG,EAAEC,UAAU,EAAEC,KAAK,QAAQ,oBAAoB;AACjF,SAASC,IAAI,QAAQ,oBAAoB;AACzC,SAASC,MAAM,EAAEC,UAAU,QAAQ,WAAW;;AAE9C;AACA,OAAO,UAAUC,WAAW,GAAG;EAC7B,IAAI;IACF,MAAMT,GAAG,CAAC;MAAEU,IAAI,EAAE;IAAO,CAAC,CAAC;IAC7B,MAAMC,MAAM,GAAG,MAAMT,IAAI,CAACK,MAAM,CAAC;IACjC,MAAMP,GAAG,CAACM,IAAI,CAACK,MAAM,CAAC,CAAC;IACvB,MAAMX,GAAG,CAAC;MAAEU,IAAI,EAAE;IAAO,CAAC,CAAC;EAC3B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMZ,GAAG,CAAC;MAACU,IAAI,EAAE,aAAa;MAAEG,OAAO,EAACD;IAAK,CAAC,CAAC;EACjD;AAEF;;AAEA;AACA,OAAO,UAAUE,aAAa,CAACC,OAAO,EAAE;EACtC,MAAMf,GAAG,CAAC;IAAEU,IAAI,EAAE;EAAO,CAAC,CAAC;EAC3B,IAAI;IACF,MAAMM,MAAM,GAAG,MAAMd,IAAI,CAACM,UAAU,EAACO,OAAO,CAACF,OAAO,CAAC;IACrD,IAAIG,MAAM,CAACV,IAAI,CAACM,KAAK,KAAK,CAAC,EAAE;MAC3BP,KAAK,CAAC,GAAG,CAAC;MACV,MAAML,GAAG,CAAC;QAACU,IAAI,EAAE,cAAc;QAAEG,OAAO,EAAC;MAA4B,CAAC,CAAC;IAEzE,CAAC,MAAK;MACJ,MAAMb,GAAG,CAAC;QAACU,IAAI,EAAE,aAAa;QAAEG,OAAO,EAAC;MAAgC,CAAC,CAAC;IAE5E;EACF,CAAC,CAAC,OAAOD,KAAK,EAAE;IACd,MAAMZ,GAAG,CAAC;MAACU,IAAI,EAAE,cAAc;MAAEG,OAAO,EAAE,iCAAgCD,KAAM;IAAC,CAAC,CAAC;EACrF;EACA,MAAMZ,GAAG,CAAC;IAAEU,IAAI,EAAE;EAAO,CAAC,CAAC;AAE7B;AAGA,OAAO,UAAUO,QAAQ,GAAG;EAC1B,MAAMhB,SAAS,CAAC,aAAa,EAAEQ,WAAW,CAAC;EAC3C,MAAML,UAAU,CAAC,eAAe,EAAEU,aAAa,CAAC;AAClD;AAEA,eAAe,UAAUI,QAAQ,GAAG;EAClC,MAAMf,GAAG,CAAC,CACRc,QAAQ,EAAE,CACX,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}