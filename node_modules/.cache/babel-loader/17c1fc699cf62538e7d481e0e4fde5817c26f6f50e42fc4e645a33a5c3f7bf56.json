{"ast":null,"code":"import { put, call, delay } from 'redux-saga/effects';\nimport { getAll, createUser, getAllCars, createCar, serviceRecords, createService } from './ApiCall';\n\n//get all user details\nexport function* getAllUsers() {\n  try {\n    yield put({\n      type: 'show'\n    });\n    const mydata = yield call(getAll);\n    delay(500);\n    yield put({\n      type: 'data',\n      message: mydata.Users\n    });\n    yield put({\n      type: 'hide'\n    });\n  } catch (error) {\n    yield put({\n      type: 'AlertFailed',\n      message: error\n    });\n  }\n}\n\n//create new user\nexport function* createNewUser(payload) {\n  try {\n    yield put({\n      type: 'show'\n    });\n    const status = yield call(createUser, payload.message);\n    if (status.data.error === 0) {\n      delay(500);\n      yield put({\n        type: 'AlertSuccess',\n        message: \"User created Successfully!\"\n      });\n      yield put({\n        type: 'hide'\n      });\n    } else {\n      yield put({\n        type: 'AlertFailed',\n        message: \"Duplicate user not allowted!!!\"\n      });\n      yield put({\n        type: 'hide'\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'AlertSuccess',\n      message: `Error while creating new user ${error}`\n    });\n    yield put({\n      type: 'hide'\n    });\n  }\n}\n\n// get users Cars \nexport function* getcars(payload) {\n  try {\n    yield put({\n      type: 'show'\n    });\n    const data = yield call(getAllCars, payload.message);\n    if (data.error === 0) {\n      yield put({\n        type: 'data',\n        message: data.User.Cars\n      });\n      yield put({\n        type: 'hide'\n      });\n    } else {\n      throw Error(\"Somethinng went wrong please try again\");\n    }\n  } catch (error) {\n    yield put({\n      type: 'AlertFailed',\n      message: error\n    });\n    yield put({\n      type: 'hide'\n    });\n  }\n}\n\n// create new car for user\nexport function* createNewCar(payload) {\n  const user = payload.message.currentUser;\n  yield put({\n    type: 'show'\n  });\n  try {\n    const data = yield call(createCar, payload.message);\n    delay(500);\n    if (data.error === 0) {\n      yield put({\n        type: \"getUsercars\",\n        message: user\n      });\n      yield put({\n        type: 'AlertSuccess',\n        message: `Entry created !!!`\n      });\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    yield put({\n      type: 'AlertFailed',\n      message: error\n    });\n  }\n  yield put({\n    type: 'hide'\n  });\n}\n\n// get service record of cars\nexport function* getServiceRecord(payload) {\n  yield put({\n    type: 'show'\n  });\n  try {\n    const data = yield call(serviceRecords, payload.message);\n    if (data.error === 0) {\n      yield delay(500);\n      yield put({\n        type: 'data',\n        message: data.Car.Servicing\n      });\n    }\n  } catch (error) {\n    yield put({\n      type: 'AlertFailed',\n      message: error\n    });\n  }\n  yield put({\n    type: 'hide'\n  });\n}\n\n//Creating new service record\nexport function* creatServiceRecord(payload) {\n  yield put({\n    type: 'show'\n  });\n  const user = payload.message.user;\n  try {\n    const data = yield call(createService, payload.message);\n    delay(500);\n    if (data.error === 0) {\n      yield put({\n        type: 'AlertSuccess',\n        message: `Service record created successfully`\n      });\n      yield put({\n        type: 'getServiceRecord',\n        message: user\n      });\n    } else {\n      throw new Error();\n    }\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: 'AlertFailed',\n      message: `Error occured!!! please contact admin`\n    });\n  }\n  yield put({\n    type: 'hide'\n  });\n}","map":{"version":3,"names":["put","call","delay","getAll","createUser","getAllCars","createCar","serviceRecords","createService","getAllUsers","type","mydata","message","Users","error","createNewUser","payload","status","data","getcars","User","Cars","Error","createNewCar","user","currentUser","getServiceRecord","Car","Servicing","creatServiceRecord","console","log"],"sources":["C:/Users/notme/Desktop/ReduxSaga/repo/Car/src/state/Saga/sagas.js"],"sourcesContent":["import { put, call, delay } from 'redux-saga/effects';\r\nimport { getAll, createUser, getAllCars, createCar, serviceRecords, createService } from './ApiCall';\r\n\r\n//get all user details\r\nexport function* getAllUsers() {\r\n  try {\r\n    yield put({ type: 'show' })\r\n    const mydata = yield call(getAll);\r\n    delay(500)\r\n    yield put({ type: 'data', message: mydata.Users })\r\n    yield put({ type: 'hide' })\r\n  } catch (error) {\r\n    yield put({ type: 'AlertFailed', message: error })\r\n  }\r\n\r\n}\r\n\r\n//create new user\r\nexport function* createNewUser(payload) {\r\n\r\n  try {\r\n    yield put({ type: 'show' })\r\n    const status = yield call(createUser, payload.message);\r\n    if (status.data.error === 0) {\r\n      delay(500);\r\n      yield put({ type: 'AlertSuccess', message: \"User created Successfully!\" })\r\n      yield put({ type: 'hide' })\r\n    } else {\r\n      yield put({ type: 'AlertFailed', message: \"Duplicate user not allowted!!!\" })\r\n      yield put({ type: 'hide' })\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: 'AlertSuccess', message: `Error while creating new user ${error}` })\r\n    yield put({ type: 'hide' })\r\n  }\r\n}\r\n\r\n// get users Cars \r\nexport function* getcars(payload) {\r\n  try {\r\n    yield put({ type: 'show' })\r\n    const data = yield call(getAllCars, payload.message);\r\n    if (data.error === 0) {\r\n      yield put({ type: 'data', message: data.User.Cars })\r\n      yield put({ type: 'hide' })\r\n    } else {\r\n      throw Error(\"Somethinng went wrong please try again\")\r\n    }\r\n\r\n  } catch (error) {\r\n    yield put({ type: 'AlertFailed', message: error })\r\n    yield put({ type: 'hide' })\r\n  }\r\n}\r\n\r\n// create new car for user\r\nexport function* createNewCar(payload) {\r\n  const user = payload.message.currentUser;\r\n  yield put({ type: 'show' })\r\n  try {\r\n    const data = yield call(createCar, payload.message);\r\n    delay(500)\r\n    if (data.error === 0) {\r\n      yield put({ type: \"getUsercars\",message: user})\r\n      yield put({ type: 'AlertSuccess', message: `Entry created !!!` })\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: 'AlertFailed', message: error })\r\n  }\r\n  yield put({ type: 'hide' })\r\n}\r\n\r\n// get service record of cars\r\nexport function* getServiceRecord(payload) {\r\n  yield put({ type: 'show' })\r\n  try {\r\n    const data = yield call(serviceRecords, payload.message);\r\n    if (data.error === 0) {\r\n      yield delay(500)\r\n      yield put({ type: 'data', message: data.Car.Servicing });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: 'AlertFailed', message: error });\r\n  }\r\n  yield put({ type: 'hide' })\r\n}\r\n\r\n//Creating new service record\r\nexport function* creatServiceRecord(payload) {\r\n  yield put({ type: 'show' })\r\n  const user = payload.message.user;\r\n  try {\r\n    const data = yield call(createService, payload.message);\r\n    delay(500)\r\n    if (data.error === 0) {\r\n      yield put({ type: 'AlertSuccess', message: `Service record created successfully` });\r\n      yield put({ type: 'getServiceRecord', message: user })\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put({ type: 'AlertFailed', message: `Error occured!!! please contact admin` });\r\n  }\r\n  yield put({ type: 'hide' })\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}